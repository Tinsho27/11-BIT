SELECT id_videojuego, SUM(cantidad) AS total_vendidos    -----muestra los 3 juegos mas vendidos
FROM Boleta_Videojuego
GROUP BY id_videojuego
ORDER BY total_vendidos DESC
LIMIT 3;

SELECT id_videojuego, COUNT(*) AS veces_deseado    -----los juegos mas deseados
FROM Lista_Deseos
GROUP BY id_videojuego
ORDER BY veces_deseado DESC;

SELECT * FROM Usuario WHERE geolocalizacion LIKE '%-33.4%';    -----muestra los usuarios de santiago

SELECT id_videojuego, SUM(cantidad) AS total    -----los juegos mas vendidos en un top
FROM Boleta_Videojuego
GROUP BY id_videojuego
ORDER BY total DESC;

-- TC 01 Insertar usuario con datos válidos y rol 'jefe de tienda'
INSERT INTO Usuario (nombre_usuario, gmail, contrasena, rol, geolocalizacion) 
VALUES ('Pedro', 'pedro@example.com', 'abc1234', 'administrador', '-33.45, -70.66');

-- TC 02 Insertar usuario con correo NULL
INSERT INTO Usuario (nombre_usuario, gmail, contrasena, rol, geolocalizacion)
VALUES ('María García', NULL, '1234', 'cliente', '-33.45, -70.66');

-- TC 03 Insertar usuario con rol inexistente
INSERT INTO Usuario (nombre_usuario, gmail, contrasena, rol, geolocalizacion)
VALUES ('Juana García', 'juana@gmail.com', '1234', 'manager', '-33.45, -70.66');

-- TC 04 Insertar usuario cliente con datos válidos
INSERT INTO Usuario (nombre_usuario, gmail, contrasena, rol, geolocalizacion)
VALUES ('Camila Rojas', 'camila.rojas@gmail.com', '1234', 'cliente', '-33.50, -70.70');

-- TC 05 Insertar videojuego con stock negativo
INSERT INTO Videojuego (nombre_juego, precio, url_imagen, stock, descripcion, id_tienda)
VALUES ('Zelda', 25000, 'url.jpg', -3, 'Prueba', 1);

-- TC 06 Insertar videojuego con categoría inexistente
INSERT INTO Videojuego_Categoria (id_videojuego, id_categoria)
VALUES (1, 99); --No hay restricciones de categorias

-- TC 07 Insertar videojuego con datos válidos
INSERT INTO Videojuego (nombre_juego, precio, url_imagen, stock, descripcion, id_tienda)
VALUES ('Zelda OK', 25000, 'url.jpg', 5, 'Correcto', 1);

-- TC 09 Usuario agrega videojuego a su lista de deseos
INSERT INTO Videojuego (nombre_juego, precio, url_imagen, stock, descripcion, id_tienda)
VALUES ('Fornai', 1000, 'url.jpg', 2, 'El fornai', 1);

-- TC 10 Usuario intenta agregar dos veces el mismo videojuego a la lista
INSERT INTO Lista_Deseos VALUES (1, 1);
INSERT INTO Lista_Deseos VALUES (1, 1);

-- TC 11 Mostrar la lista de deseos de un usuario
SELECT * FROM Lista_Deseos WHERE id_usuario = 1;

-- TC 12 Agregar un producto al carrito de compras
INSERT INTO Carro_Videojuego VALUES (1, 1, 1);

-- TC 13 Mostrar los productos del carrito de compras
SELECT * FROM Carro_Videojuego WHERE id_carro = 1;

-- TC 14 Mostrar el precio total a pagar por el carrito de compras
SELECT SUM(cantidad * precio) FROM Carro_Videojuego
JOIN Videojuego USING (id_videojuego) 
WHERE id_carro = 1;

-- TC 15 Eliminar un producto del carrito de compras
DELETE FROM Carro_Videojuego WHERE id_carro = 1 AND id_videojuego = 1;

-- TC 16 Cliente agrega videojuegos al carrito con stock disponible
INSERT INTO Carro_Videojuego VALUES (1, 1, 2);

-- TC 17 Cliente intenta comprar más unidades que el stock disponible
INSERT INTO Carro_Videojuego VALUES (1, 1, 9999);

-- TC 18 Cliente intenta pagar carrito que contiene un videojuego sin stock
INSERT INTO Carro_Videojuego VALUES (2, 5, 1);

-- TC 19 


-- TC 20


-- TC 21


-- TC 22


-- TC 23


-- TC 24


-- TC 25


-- TC 26 


-- TC 27 Videojuegos según ubicación del usuario,se debe de construir una relación entre tienda, usuario y ventas
INSERT INTO Videojuego (nombre_juego, precio, url_imagen, stock, descripcion, id_tienda)
VALUES ('Nuevo juego', 20000, 'url.jpg', 5, 'Auditable', 1);


INSERT INTO Boleta (id_usuario, fecha, metodo_pago, factura)
VALUES (1, CURRENT_DATE, 'Tarjeta', 'F999');----debe de generar una nueba boleta asi que ver de forma manual si esta bien ingresada 


INSERT INTO Boleta (id_usuario, fecha, metodo_pago, factura)
VALUES (1, CURRENT_DATE, 'Cheque', 'F998');------debe de dar error ya que no existe ese metood de compra aun en las tiendas ver y arreglar 


INSERT INTO Valoracion VALUES (1, 1, 5, 'Muy bueno');----debe de pasar asi que ver por que da error 


INSERT INTO Valoracion VALUES (1, 1, 4, 'Otra opinión');----- da error pero debe de ser por la duplicacion de una keyBoleta

UPDATE Videojuego SET stock = 10 WHERE id_videojuego = 1;

DELETE FROM Videojuego WHERE id_videojuego = 1;-----debe de estar bloqueado ya que con un trigger debe de registrar que el juego si tiene ventas

CALL actualizar_precio_categoria('Aventura', 10);----Aumenta precios en 10% de error se debe de buscar el por que pasa eso

CALL reporte_ventas_usuario(1);------ Reporte de ventas por usuario, tabla con ventas del usuario 1

UPDATE Videojuego SET precio = 30000 WHERE id_videojuego = 1;

UPDATE Videojuego SET stock = 0 WHERE id_videojuego = 2;---- no debe de poder comprarse verificar de forma manual 


